<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixin.dao.kms.impl.KMSCaptionDaoImpl">
	  <resultMap id="t_kms_caption_map" type="com.zhixin.entities.kms.KMSCaptionEntity">
		 			<result property="id" column="id" /> 
					<result property="key" column="key" /> 
					<result property="capTime" column="cap_time" /> 
					<result property="capTimeShow" column="cap_time_show" /> 
					<result property="caption" column="caption" /> 
					<result property="filename" column="filename" /> 
			</resultMap>
																							<insert id="create" parameterType="com.zhixin.entities.kms.KMSCaptionEntity">
		insert into  t_kms_caption (
			id 
																			 ,`key`
				 												 ,`cap_time`
				 												 ,`cap_time_show`
				 												 ,`caption`
				 												 ,`filename`
				 					) values ( 
	    						       #{id} 
																																												, #{key} 
												, #{capTime} 
												, #{capTimeShow} 
												, #{caption} 
												, #{filename} 
							)
	</insert>
	<update id="update" parameterType="com.zhixin.entities.kms.KMSCaptionEntity">
		update t_kms_caption      
	 <set> 
     											 				`key` =#{key}, 
			  											 				`cap_time` =#{capTime}, 
			  											 				`cap_time_show` =#{capTimeShow}, 
			  											 				`caption` =#{caption}, 
			  											 				`filename` =#{filename}, 
			  						</set> 
     where 
								        `id` = #{id} 
																																
	</update>
	<delete id="remove" parameterType="Long">
		update  t_kms_caption  set
		 status= 0
		where 
		 						        `id` = #{id} 
																															</delete>
	<select id="findAll" resultMap="t_kms_caption_map">
		 select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
						  from  t_kms_caption where `status`=1
	</select> 
	
	<select id="find" resultMap="t_kms_caption_map" parameterType="Long">
	  select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
						  from  t_kms_caption where 
								        `id` = #{id} 
																																and  `status`=1
	</select> 
	<select id="findByPKList" resultMap="t_kms_caption_map" parameterType="List">
		 select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
						  from  t_kms_caption where 
								        `id` in 
																																<foreach collection="list" item="key" open="(" separator="," close=")">
			#{key}
		</foreach>
		and `status`=1 
		
	</select>
	<select id="findByBeanProp" parameterType="com.zhixin.entities.kms.KMSCaptionEntity" resultMap="t_kms_caption_map">
		select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
						  from  t_kms_caption where  `status`=1
														<if test="id != null">  
			      and `id` = #{id}
			    </if>  
												<if test="key != null">  
			      and `key` like concat('%',#{key},'%') 
			    </if>  
																																					<if test="caption != null">  
			      and `caption` like concat('%',#{caption},'%') 
			    </if>  
																	<if test="filename != null">  
			      and `filename` like concat('%',#{filename},'%') 
			    </if>  
											</select>
	<select id="findForPager" parameterType="map" resultMap="t_kms_caption_map">
		select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
						  from  t_kms_caption where  `status`=1
															<if test="id != null">  
			      and `id` = #{id} 
			    </if>  
												<if test="key != null">  
			      and `key` like concat('%',#{key},'%') 
			    </if>  
																																								<if test="caption != null">  
			      and `caption` like concat('%',#{caption},'%') 
			    </if>  
																		<if test="filename != null">  
			      and `filename` like concat('%',#{filename},'%') 
			    </if>  
												      limit #{startNum},#{pageSize}
	</select>
	<select id="findForPagerCount" parameterType="com.zhixin.entities.kms.KMSCaptionEntity" resultType="Integer"> 
		select count(1) as count from  t_kms_caption where  status=1
															<if test="id != null">  
			      and `id` = #{id}
			    </if>  
												<if test="key != null">  
			      and `key` like concat('%',#{key},'%') 
			    </if>  
																																								<if test="caption != null">  
			      and `caption` like concat('%',#{caption},'%') 
			    </if>  
																		<if test="filename != null">  
			      and `filename` like concat('%',#{filename},'%') 
			    </if>  
												</select>
	
	<select id="dyFindForPager" parameterType="map" resultMap="t_kms_caption_map">
		select 						     `id`
																																											        ,`key`
											        ,`cap_time`
											        ,`cap_time_show`
											        ,`caption`
											        ,`filename`
					 from  t_kms_caption where  `status`=1
		  		
   		<if test = "conditionList != null">
			 <foreach collection="conditionList" item="item" index="index"  >  
	     			 
			        <choose>  
			            <when test="item.dbOp == 'in' ">  
			               and `${item.colName}`  IN   
					     <foreach collection="item.value" item="key"  open="(" separator="," close=")">  
					        #{key}  
					     </foreach>  
			            </when >  
			            <when test="item.dbOp == 'like' ">  
			             and   `${item.colName}` like #{item.value}
			            </when >   
			            <otherwise>  
			            and	 `${item.colName}`  ${item.dbOp}  #{item.value}  
			            </otherwise>  
			        </choose>  
	   		 </foreach>   
		</if>
		<if test ="order != null">
			order by 
			 <foreach collection="order" item="item" index="index" separator="," >  
	     			`${item}`
	   		 </foreach>   
		</if>
		<if test ="direction != null">
			${direction}
		</if>
	      limit #{startNum},#{pageSize}
	</select>
	<select id="dyFindForPagerCount" parameterType="map" resultType="Integer"> 
		select count(1) as count from  t_kms_caption where  status=1
		 <if test = "conditionList != null">
			 <foreach collection="conditionList" item="item" index="index"  >  
	     			 
			        <choose>  
			            <when test="item.dbOp == 'in' ">  
			               and `${item.colName}`  IN   
					     <foreach collection="item.value" item="key"  open="(" separator="," close=")">  
					        #{key}  
					     </foreach>  
			            </when >  
			            <when test="item.dbOp == 'like' ">  
			             and   `${item.colName}` like  #{item.value} 
			            </when >   
			            <otherwise>  
			            and	 `${item.colName}`  ${item.dbOp}  #{item.value}  
			            </otherwise>  
			        </choose>  
	   		 </foreach>   
		</if>
	</select>
	<select id="countWithGroupBy" parameterType="map" resultType="map">
        select  
            count(1) as count
         <if test="group_by != null">
            <foreach collection="group_by" item="item" index="index" open=","
                separator=",">
                `${item}`
            </foreach>
        </if>
        from t_kms_caption where status=1 
        <if test="conditionList != null">
            <foreach collection="conditionList" item="item" index="index"> 
                <choose>
                    <when test="item.dbOp == 'in' ">
                        and `${item.colName}` IN
                        <foreach collection="item.value" item="key" open="("
                            separator="," close=")">
                            #{key}
                        </foreach>
                    </when>
                    <when test="item.dbOp == 'like' ">
                        and `${item.colName}` like #{item.value} 
                    </when>
                    <otherwise>
                        and `${item.colName}` ${item.dbOp} #{item.value}
                    </otherwise>
                </choose>
            </foreach>
        </if>
        <if test="group_by != null">
            group by
            <foreach collection="group_by" item="item" index="index"
                separator=",">
                `${item}`
            </foreach>
        </if>
          <if test="order != null">
            order by
            <foreach collection="order" item="item" index="index"
                separator=",">
                `${item}`
            </foreach>
        </if>
        <if test="direction != null">
            ${direction}
        </if>
    </select>
	 
</mapper>
